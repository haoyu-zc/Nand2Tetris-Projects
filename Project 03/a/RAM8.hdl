// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=in, sel=address, a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8);
    Register(in=reg1, load=load, out=out);
    Register(in=reg2, load=load, out=out);
    Register(in=reg3, load=load, out=out);
    Register(in=reg4, load=load, out=out);
    Register(in=reg5, load=load, out=out);
    Register(in=reg6, load=load, out=out);
    Register(in=reg7, load=load, out=out);
    Register(in=reg8, load=load, out=out);
}